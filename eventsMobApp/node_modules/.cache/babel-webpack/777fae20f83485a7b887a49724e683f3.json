{"ast":null,"code":"import * as ɵngcc0 from '@angular/core';\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Directive, ElementRef, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n/**\n * @element ons-select\n * @directive OnsSelect\n * @selector ons-select\n * @description\n *   [en]Angular directive for `<ons-select>` component.[/en]\n *   [ja]`<ons-select>`要素のAngularディレクティブです。[/ja]\n * @example\n *   <ons-select [(ngModel)]=\"selectedValue\">\n *     <option value=\"Item A\">Item A</option>\n *     <option value=\"Item B\">Item B</option>\n *     <option value=\"Item C\">Item C</option>\n *   </ons-select>\n */\n\nvar OnsSelect =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function OnsSelect(_elementRef) {\n    this._elementRef = _elementRef;\n\n    this._propagateChange = function (_) {};\n\n    this._boundOnChange = this._onChange.bind(this);\n    this._element = _elementRef.nativeElement;\n\n    this._element.addEventListener('change', this._boundOnChange);\n  }\n\n  OnsSelect_1 = OnsSelect;\n\n  OnsSelect.prototype._onChange = function (event) {\n    this._propagateChange(event.target.value);\n  };\n\n  Object.defineProperty(OnsSelect.prototype, \"element\", {\n    get: function get() {\n      return this._element;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OnsSelect.prototype, \"nativeElement\", {\n    get: function get() {\n      return this._element;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  OnsSelect.prototype.ngOnDestroy = function () {\n    this._element.removeEventListener('change', this._boundOnChange);\n\n    this._element = null;\n  };\n\n  OnsSelect.prototype.writeValue = function (obj) {\n    this._element.value = obj;\n  };\n\n  OnsSelect.prototype.registerOnChange = function (fn) {\n    this._propagateChange = fn;\n  };\n\n  OnsSelect.prototype.registerOnTouched = function () {};\n\n  var OnsSelect_1;\n  OnsSelect = OnsSelect_1 = __decorate([__metadata(\"design:paramtypes\", [ElementRef])], OnsSelect);\n\n  OnsSelect.ɵfac = function OnsSelect_Factory(t) {\n    return new (t || OnsSelect)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  OnsSelect.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: OnsSelect,\n    selectors: [[\"ons-select\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(function () {\n        return OnsSelect_1;\n      }),\n      multi: true\n    }])]\n  });\n  return OnsSelect;\n}();\n\nexport { OnsSelect }; //# sourceMappingURL=ons-select.js.map","map":null,"metadata":{},"sourceType":"module"}