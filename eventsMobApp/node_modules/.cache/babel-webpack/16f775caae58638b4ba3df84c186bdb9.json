{"ast":null,"code":"import * as ɵngcc0 from '@angular/core';\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Directive, Input, Output, EventEmitter, ElementRef } from '@angular/core';\n/**\n * @element ons-segment\n * @directive OnsSegment\n * @selector ons-segment\n * @description\n *   [en]Angular directive for `<ons-segment>` component.[/en]\n *   [ja]`<ons-segment>`要素のAngularディレクティブです。[/ja]\n * @example\n *   @Component({\n *     selector: 'app',\n *     template: `\n *       <ons-page>\n *         <ons-toolbar>\n *           <div class=\"center\">\n *             <ons-segment style=\"width: 280px; margin-top: 8px;\" [tabbar]=\"tabbar\" (postchange)=\"onPostChange($event)\">\n *               <button>Page 1</button>\n *               <button>Page 2</button>\n *               <button>Page 3</button>\n *             </ons-segment>\n *           </div>\n *         </ons-toolbar>\n *         <ons-tabbar #tabbar>\n *           <ons-tab [page]=\"page1\" active></ons-tab>\n *           <ons-tab [page]=\"page2\"></ons-tab>\n *           <ons-tab [page]=\"page3\"></ons-tab>\n *         </ons-tabbar>\n *       </ons-page>\n *     `\n *   })\n *   export class AppComponent {\n *     page1 = PageComponent;\n *     page2 = PageComponent;\n *     page3 = PageComponent;\n *\n *     constructor() {}\n *\n *     onPostChange(event: any) {\n *      console.log('postchange event', event);\n *     }\n *   }\n *\n *   @Component({\n *     selector: 'ons-page[tab]',\n *     template: `<h2>Page</h2>`\n *   })\n *   export class PageComponent {\n *     constructor() { }\n *   }\n */\n\nvar OnsSegment =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function OnsSegment(_elementRef) {\n    var _this = this;\n\n    this._elementRef = _elementRef;\n    /**\n     * @output activeIndexChange\n     * @type {number}\n     * @desc\n     *   [en]Triggers when the index of the active button is changed.[/en]\n     *   [ja]アクティブなボタンのインデックスが変化した時に発火します。[/ja]\n     */\n\n    this.activeIndexChange = new EventEmitter();\n    this._element = _elementRef.nativeElement;\n\n    this._element.addEventListener('postchange', function (event) {\n      _this.activeIndexChange.emit(event.index);\n    });\n  }\n\n  Object.defineProperty(OnsSegment.prototype, \"tabbar\", {\n    /**\n     * @input tabbar\n     * @type {Type<any>}\n     * @desc\n     *   [en]The tabbar component to \"connect\" to the segment. Must be inside the same page. Works only during initialization.[/en]\n     *   [ja]このセグメントに紐づけるタブバーを指定します。タブバーはセグメントと同一ページ内に存在する必要があります。初期化時にのみ動作します。[/ja]\n     */\n    set: function set(_tabbar) {\n      var _this = this;\n\n      this._element._tabbar = _tabbar;\n\n      this._element._tabbar.setAttribute('hide-tabs', '');\n\n      setImmediate(function () {\n        return _this._element._setChecked(_this._element._tabbar.getActiveTabIndex());\n      });\n\n      this._element._tabbar.addEventListener('prechange', this._element._onTabbarPreChange);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  OnsSegment.prototype.ngOnChanges = function () {\n    if (this.activeIndex) {\n      this._element.setActiveButton(this.activeIndex);\n    }\n  };\n\n  OnsSegment = __decorate([__metadata(\"design:paramtypes\", [ElementRef])], OnsSegment);\n\n  OnsSegment.ɵfac = function OnsSegment_Factory(t) {\n    return new (t || OnsSegment)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  OnsSegment.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: OnsSegment,\n    selectors: [[\"ons-segment\"]],\n    inputs: {\n      tabbar: \"tabbar\",\n      activeIndex: \"activeIndex\"\n    },\n    outputs: {\n      activeIndexChange: \"activeIndexChange\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  return OnsSegment;\n}();\n\nexport { OnsSegment }; //# sourceMappingURL=ons-segment.js.map","map":null,"metadata":{},"sourceType":"module"}