{"ast":null,"code":"import * as ɵngcc0 from '@angular/core';\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Injector, Directive, ElementRef, Type, ComponentFactoryResolver, Input, ViewContainerRef, NgZone } from '@angular/core';\nimport * as ons from 'onsenui';\nimport { Params } from '../ons/params';\n\nvar NavigatorPage =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function NavigatorPage(elementRef, destroy, animator, params) {\n    if (elementRef === void 0) {\n      elementRef = null;\n    }\n\n    if (destroy === void 0) {\n      destroy = function destroy() {};\n    }\n\n    if (animator === void 0) {\n      animator = null;\n    }\n\n    if (params === void 0) {\n      params = new Params();\n    }\n\n    this.elementRef = elementRef;\n    this.destroy = destroy;\n    this.animator = animator;\n    this.params = params;\n  }\n\n  return NavigatorPage;\n}();\n\nexport { NavigatorPage };\n/**\n * @element ons-navigator\n * @directive OnsNavigator\n * @selector ons-navigator\n * @codpen KgvAvx\n * @description\n *   [en]Angular directive for `<ons-navigator>` component.[/en]\n *   [ja]`<ons-navigator>`要素のAngularディレクティブです。[/ja]\n * @example\n *   @Component({\n *     selector: 'ons-page',\n *     template: `\n *       <ons-toolbar>\n *         <div class=\"center\">Page</div>\n *       </ons-toolbar>\n *       <div class=\"content\">...</div>\n *     `\n *   })\n *   class DefaultPageComponent { }\n *\n *   @Component({\n *     selector: 'navigator-app',\n *     template: `\n *     <ons-navigator [page]=\"page\"></ons-navigator>\n *     `\n *   })\n *   export class AppComponent {\n *     page = DefaultPageComponent\n *   }\n */\n\nvar OnsNavigator =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function OnsNavigator(_elementRef, _resolver, _viewContainer, _injector, _zone) {\n    this._elementRef = _elementRef;\n    this._resolver = _resolver;\n    this._viewContainer = _viewContainer;\n    this._injector = _injector;\n    this._zone = _zone;\n    this._lastPageLoader = this.element.pageLoader;\n    this.element.pageLoader = this._createPageLoader();\n  }\n\n  OnsNavigator_1 = OnsNavigator;\n  Object.defineProperty(OnsNavigator.prototype, \"pageComponentType\", {\n    /**\n     * @input page\n     * @type {Type<any>}\n     * @desc\n     *   [en]Type of the page component.[/en]\n     *   [ja]ページコンポーネントのクラスを指定します。[/ja]\n     */\n    set: function set(page) {\n      this.element.page = page;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OnsNavigator.prototype, \"element\", {\n    get: function get() {\n      return this._elementRef.nativeElement;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OnsNavigator.prototype, \"nativeElement\", {\n    get: function get() {\n      return this._elementRef.nativeElement;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  OnsNavigator.prototype._createPageLoader = function () {\n    var _this = this;\n\n    var componentRefMap = new WeakMap();\n    return new ons.PageLoader(function (_a, done) {\n      var page = _a.page,\n          parent = _a.parent,\n          params = _a.params;\n\n      _this._zone.run(function () {\n        var pageParams = new Params(params || {});\n        var injector = Injector.create({\n          providers: [{\n            provide: Params,\n            useValue: pageParams\n          }, {\n            provide: OnsNavigator_1,\n            useValue: _this\n          }],\n          parent: _this._injector\n        });\n\n        var factory = _this._resolver.resolveComponentFactory(page);\n\n        var selector = 'ons-navigator';\n        var pageComponentRef = factory.create(injector, undefined);\n\n        _this._viewContainer.insert(pageComponentRef.hostView);\n\n        var pageElement = pageComponentRef.location.nativeElement;\n        componentRefMap.set(pageElement, pageComponentRef);\n\n        _this.element.appendChild(pageElement); // dirty fix to insert in correct position\n\n\n        done(pageElement);\n      });\n    }, function (element) {\n      var componentRef = componentRefMap.get(element);\n\n      if (componentRef) {\n        componentRef.destroy();\n        componentRefMap.delete(element);\n      }\n    });\n  };\n\n  OnsNavigator.prototype.ngOnDestroy = function () {\n    this.element.pageLoader = this._lastPageLoader;\n  };\n\n  var OnsNavigator_1;\n  OnsNavigator = OnsNavigator_1 = __decorate([__metadata(\"design:paramtypes\", [ElementRef, ComponentFactoryResolver, ViewContainerRef, Injector, NgZone])], OnsNavigator);\n\n  OnsNavigator.ɵfac = function OnsNavigator_Factory(t) {\n    return new (t || OnsNavigator)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n\n  OnsNavigator.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: OnsNavigator,\n    selectors: [[\"ons-navigator\"]],\n    inputs: {\n      pageComponentType: [\"page\", \"pageComponentType\"]\n    }\n  });\n  return OnsNavigator;\n}();\n\nexport { OnsNavigator }; //# sourceMappingURL=ons-navigator.js.map","map":null,"metadata":{},"sourceType":"module"}