{"ast":null,"code":"import * as ɵngcc0 from '@angular/core';\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Directive, ElementRef, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport * as ons from 'onsenui';\n\nvar ItemContext =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function ItemContext($implicit, index, count) {\n    this.$implicit = $implicit;\n    this.index = index;\n    this.count = count;\n  }\n\n  return ItemContext;\n}();\n\nexport { ItemContext };\n/**\n * @element ons-lazy-repeat\n * @directive OnsLazyRepeat\n * @selector [ons-lazy-repeat]\n * @description\n *   [en]Angular directive for `<ons-lazy-repeat>` component.[/en]\n *   [ja]`<ons-lazy-repeat>`要素と同じ機能を提供するAngularディレクティブです。[/ja]\n * @example\n *   <ons-list>\n *     <ons-list-item *onsLazyRepeat=\"let item of items; let i = index\">\n *       #{{i}} {{item.msg}}\n *     </ons-list-item>\n *   </ons-list>\n */\n\nvar OnsLazyRepeat =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function OnsLazyRepeat(_elementRef, _templateRef, _viewContainer) {\n    this._elementRef = _elementRef;\n    this._templateRef = _templateRef;\n    this._viewContainer = _viewContainer;\n  }\n\n  Object.defineProperty(OnsLazyRepeat.prototype, \"onsLazyRepeatOf\", {\n    /**\n     * @input onsLazyRepeat\n     * @desc\n     *   [en]Render infinite lists with \"let of\" syntax in Angular.[/en]\n     *   [ja]let of式を指定します。[/ja]\n     * @example\n     *  <ons-list>\n     *    <ons-list-item *onsLazyRepeat=\"let message of messages\">\n     *      {{message}}\n     *    </ons-list-item>\n     *  </ons-list>\n     */\n    set: function set(value) {\n      var _this = this;\n\n      this._onsLazyRepeatOf = value;\n      this._provider = new ons._internal.LazyRepeatProvider(this._elementRef.nativeElement.parentElement, new ons._internal.LazyRepeatDelegate({\n        loadItemElement: function loadItemElement(index, done) {\n          _this._loadItemTemplate(index, done);\n        },\n        countItems: function countItems() {\n          return _this._onsLazyRepeatOf.length;\n        }\n      }));\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  OnsLazyRepeat.prototype._loadItemTemplate = function (index, done) {\n    var context = new ItemContext(this._onsLazyRepeatOf[index], index, this._onsLazyRepeatOf.length);\n\n    var view = this._viewContainer.createEmbeddedView(this._templateRef, context); // dirty fix on createEmbeddedView() does not insert DOM element randomly.\n\n\n    done({\n      element: view.rootNodes[0]\n    });\n  };\n\n  OnsLazyRepeat.prototype.refresh = function () {\n    if (this._provider) {\n      this._viewContainer.clear();\n\n      this._provider.refresh();\n    }\n  };\n\n  OnsLazyRepeat.prototype.ngOnDestroy = function () {\n    if (this._provider) {\n      this._provider.destroy();\n    }\n\n    this._viewContainer.clear();\n\n    this._provider = null;\n  };\n\n  OnsLazyRepeat = __decorate([__metadata(\"design:paramtypes\", [ElementRef, TemplateRef, ViewContainerRef])], OnsLazyRepeat);\n\n  OnsLazyRepeat.ɵfac = function OnsLazyRepeat_Factory(t) {\n    return new (t || OnsLazyRepeat)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef));\n  };\n\n  OnsLazyRepeat.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: OnsLazyRepeat,\n    selectors: [[\"\", \"onsLazyRepeat\", \"\"]],\n    inputs: {\n      onsLazyRepeatOf: \"onsLazyRepeatOf\"\n    }\n  });\n  return OnsLazyRepeat;\n}();\n\nexport { OnsLazyRepeat }; //# sourceMappingURL=ons-lazy-repeat.js.map","map":null,"metadata":{},"sourceType":"module"}