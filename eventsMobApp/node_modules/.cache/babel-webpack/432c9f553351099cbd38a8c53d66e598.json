{"ast":null,"code":"import * as ɵngcc0 from '@angular/core';\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Directive, ElementRef, Output, EventEmitter } from '@angular/core';\n/**\n * @element ons-pull-hook\n * @directive OnsPullHook\n * @selector ons-pull-hook\n * @description\n *   [en]Angular directive for `<ons-pull-hook>` component.[/en]\n *   [ja]`<ons-pull-hook>`要素のためのAngular2ディレクティブです。[/ja]\n * @example\n *   @Component({\n *     selector: 'app',\n *     template: `\n *     <ons-page>\n *       <ons-toolbar>\n *         <div class=\"center\">Pull Hook</div>\n *       </ons-toolbar>\n *       <div class=\"content\">\n *         <ons-pull-hook height=\"64px\" threshold-height=\"128px\"\n *           (pull)=\"onPull($event)\" (changestate)=\"onChangeState($event)\" (action)=\"onAction($event)\">\n *           {{message}}\n *         </ons-pull-hook>\n *       </div>\n *     </ons-page>\n *     `\n *   })\n *   export class AppComponent {\n *     message: string = 'Pull down to refresh';\n *\n *     onAction($event) {\n *       setTimeout(() => {\n *         $event.done();\n *       }, 1000);\n *     }\n *\n *     onChangeState($event) {\n *       switch ($event.state) {\n *         case 'initial':\n *           this.message = 'Pull down to refresh';\n *           break;\n *         case 'preaction':\n *           this.message = 'Release to refresh';\n *           break;\n *         case 'action':\n *           this.message = 'Loading data...';\n *           break;\n *       }\n *     }\n *\n *     onPull($event) {\n *       console.log($event.ratio);\n *     }\n *\n *   }\n */\n\nvar OnsPullHook =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function OnsPullHook(_elementRef) {\n    var _this = this;\n\n    this._elementRef = _elementRef;\n    /**\n     * @output action\n     * @param {Object} $event\n     * @param {Function} $event.done\n     * @desc\n     *   [en]Triggers when the page is pulled down.[/en]\n     *   [ja]`ons-pull-hook`要素のアクションが必要なときに呼び出されます。[/ja]\n     */\n\n    this.action = new EventEmitter();\n    /**\n     * @output changestate\n     * @param {Object} $event\n     * @param {String} $event.state\n     * @desc\n     *   [en]Triggers when the state is changed.[/en]\n     *   [ja]`ons-pull-hook`要素の状態が変わった時に呼び出されます。[/ja]\n     */\n\n    /**\n     * @output pull\n     * @param {Object} $event\n     * @param {Number} $event.ratio\n     * @param {Object} $event.options\n     * @desc\n     *   [en]Triggers whenever the element is pulled.[/en]\n     *   [ja]`ons-pull-hook`要素がプルされているときに呼び出されます。[/ja]\n     */\n\n    this.pull = new EventEmitter();\n    this._element = _elementRef.nativeElement;\n\n    this._element.onAction = function (done) {\n      return _this.action.emit({\n        done: done\n      });\n    };\n\n    this._element.onPull = function (ratio, options) {\n      return _this.pull.emit({\n        ratio: ratio,\n        options: options\n      });\n    };\n  }\n\n  OnsPullHook.prototype.ngOnDestroy = function () {\n    this._element.onAction = null;\n    this._element = null;\n  };\n\n  OnsPullHook = __decorate([__metadata(\"design:paramtypes\", [ElementRef])], OnsPullHook);\n\n  OnsPullHook.ɵfac = function OnsPullHook_Factory(t) {\n    return new (t || OnsPullHook)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  OnsPullHook.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: OnsPullHook,\n    selectors: [[\"ons-pull-hook\"]],\n    outputs: {\n      action: \"action\",\n      pull: \"pull\"\n    }\n  });\n  return OnsPullHook;\n}();\n\nexport { OnsPullHook }; //# sourceMappingURL=ons-pull-hook.js.map","map":null,"metadata":{},"sourceType":"module"}